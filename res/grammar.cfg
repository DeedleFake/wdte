  <script> -> <decls> Ω
   <decls> -> <decl> <decls>
            | ε
    <decl> -> <import>
            | <funcdecl>
  <import> -> string => id ;
<funcdecl> -> <funcmods> id <argdecls> => <expr> ;
<funcmods> -> <funcmod> <funcmods>
            | ε
 <funcmod> -> memo
<argdecls> -> id <argdecls>
            | ε
    <expr> -> <single> <args> <slot> <chain>
    <args> -> <single> <args>
            | ε
   <chain> -> -> <single> <args> <slot> <chain>
            | -- <single> <args> <slot> <chain>
            | ε
    <slot> -> : id
            | ε
  <single> -> number
            | string
            | <func>
            | <array>
            | <switch>
            | <compound>
    <func> -> id <subfunc>
 <subfunc> -> . id
            | ε
   <array> -> [ <exprs> ]
  <switch> -> switch <expr> { <switches> }
<compound> -> ( <exprs> )
   <exprs> -> <expr> ; <exprs>
            | ε
<switches> -> <expr> => <expr> ; <switches>
            | default => <expr> ; <switches>
            | ε

# vim: ts=2 sw=2 et
